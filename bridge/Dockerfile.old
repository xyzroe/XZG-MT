# Multi-stage build for better optimization
FROM node:20-bullseye AS builder

# allow buildx to pass target platform/arch to npm so native binaries (esbuild, sharp) are fetched for target
ARG TARGETOS
ARG TARGETARCH

WORKDIR /app

# Copy root package metadata
COPY package*.json ./

# Copy web-page package metadata so we can install its deps (devDeps needed for build)
COPY web-page/package*.json ./web-page/

# Install web-page deps (dev deps required for esbuild/typescript) and bridge production deps
RUN npm --prefix ./web-page install && \
    npm ci --only=production && npm cache clean --force

# Copy web-page sources and any scripts used during build
COPY web-page ./web-page
COPY bridge/scripts ./bridge/scripts

# Build web
RUN npm --prefix ./web-page run build:lite

# Production stage
# FROM node:18-alpine
# Production stage (glibc-based so native modules work)
FROM node:18-bullseye-slim

# Install jq, gosu (used instead of su-exec), netcat and udev
RUN apt-get update && apt-get install -y --no-install-recommends \
    jq \
    gosu \
    netcat \
    udev \
  && rm -rf /var/lib/apt/lists/*
# Install jq, su-exec, netcat, and udev for Home Assistant addon support
#RUN apk add --no-cache jq su-exec netcat-openbsd eudev

# Create non-root user (for non-HA mode) and add to dialout group for serial access
RUN addgroup --gid 1001 --system nodejs && \
    adduser --system --uid 1001 --ingroup nodejs --no-create-home --shell /usr/sbin/nologin nodejs && \
    usermod -aG dialout nodejs || true

# Create app directory
WORKDIR /app

# Copy dependencies from builder stage
COPY --from=builder /app/node_modules ./node_modules

# Copy web folder from builder stage so it ends up in the final image
COPY --from=builder /app/web-page/dist ./web

# Copy app source
COPY bridge/package*.json ./
COPY bridge/bridge.js ./

# Copy HA addon wrapper script
COPY xzg-multi-tool-addon/run.sh ./
RUN chmod +x ./run.sh

# Set environment
ENV NODE_ENV=production
ENV PORT=8765

# Expose default WS port
EXPOSE 8765

# Health check - fast and reliable port check
HEALTHCHECK --interval=10s --timeout=3s --start-period=10s --retries=3 \
  CMD nc -z localhost ${PORT} || exit 1

# Smart entrypoint: 
# - HA mode: run as root with full device access
# - Standalone: switch to nodejs user but keep dialout group access
ENTRYPOINT ["/bin/sh", "-c", "if [ -f /data/options.json ]; then exec ./run.sh; else exec gosu nodejs node /app/bridge.js \"$@\"; fi", "--"]
